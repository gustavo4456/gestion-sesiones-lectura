/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.gustavo.guardarlibros.vista;

import com.gustavo.guardarlibros.modelo.Lectura;
import com.gustavo.guardarlibros.modelo.Libro;
import com.gustavo.guardarlibros.modelo.Perfil;
import com.gustavo.guardarlibros.utils.LecturaUtilImpl;
import com.gustavo.guardarlibros.utils.LibroUtilImpl;
import java.awt.BorderLayout;
import java.time.LocalDate;
import java.util.Comparator;
import java.util.IntSummaryStatistics;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author gusta
 */
public class JDialogEstadisticaLecturasPorPeriodo extends javax.swing.JDialog {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(JDialogEstadisticaLecturasPorPeriodo.class.getName());

    private Perfil perfil = new Perfil();

    private LecturaUtilImpl lecturaUtilImpl = new LecturaUtilImpl();

    /**
     * Creates new form JDialogEstadisticaProgresoPorLibro
     */
    public JDialogEstadisticaLecturasPorPeriodo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public JDialogEstadisticaLecturasPorPeriodo(java.awt.Frame parent, boolean modal, Perfil perfil) {
        super(parent, modal);
        initComponents();

        this.perfil = perfil;

        lblPerfil.setText("Para el Perfil: " + this.perfil.getNombre());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanelPrincipal = new javax.swing.JPanel();
        lblPerfil = new javax.swing.JLabel();
        jPanelLienzo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbMeses = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lecturas por periodo");

        lblPerfil.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPerfil.setText("Para el perfil: ");

        javax.swing.GroupLayout jPanelLienzoLayout = new javax.swing.GroupLayout(jPanelLienzo);
        jPanelLienzo.setLayout(jPanelLienzoLayout);
        jPanelLienzoLayout.setHorizontalGroup(
            jPanelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanelLienzoLayout.setVerticalGroup(
            jPanelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Meses:");

        cbMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        cbMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanelPrincipalLayout = new javax.swing.GroupLayout(JPanelPrincipal);
        JPanelPrincipal.setLayout(JPanelPrincipalLayout);
        JPanelPrincipalLayout.setHorizontalGroup(
            JPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(JPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(lblPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbMeses, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JPanelPrincipalLayout.setVerticalGroup(
            JPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(JPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesesActionPerformed
        // TODO add your handling code here:

        if (perfil != null) {
            if (cbMeses.getSelectedIndex() != -1) {
                mostrarGraficoDeLineas();
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un mes.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado un perfil.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_cbMesesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogEstadisticaLecturasPorPeriodo dialog = new JDialogEstadisticaLecturasPorPeriodo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private ChartPanel crearSimpleLineChart() {

        if (perfil != null) {

            Integer cantidadMeses = Integer.valueOf((String) cbMeses.getSelectedItem());

            //Se ordena las lecturas por fecha de mas antigua a mas reciente
            Map<String, Integer> mapaListaLectraOrdenada = lecturaUtilImpl.getObtenerUltimosMesesYConteoDeLecturasParaCadaMes(cantidadMeses, perfil.getId()); // 1. Crear un Dataset para el gráfico de líneas
            // DefaultCategoryDataset es fácil de usar para empezar
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            // Añadir datos de ejemplo: (valor, serie, categoria)
            // Imagina que son puntos de progreso en el tiempo para una única serie
            mapaListaLectraOrdenada.forEach((llave, valor) -> {
                dataset.addValue(valor, "Sesiones de Lectura Acumuladas", llave);
            });

            // 2. Crear el objeto JFreeChart
            JFreeChart lineaDibujo = ChartFactory.createBarChart(
                    "Sesiones de Lectura por periodo", // Título del gráfico
                    "Mes/Año", // Etiqueta del eje X
                    "Cantidad de sesiones", // Etiqueta del eje Y
                    dataset, // El dataset con los datos
                    PlotOrientation.VERTICAL, // Orientación del gráfico
                    true, // ¿Mostrar leyenda? (true = sí)
                    true, // ¿Mostrar tooltips? (true = sí, texto al pasar el ratón)
                    false // ¿Generar URLs? (false = no)
            );

            // 3. Crear el ChartPanel para mostrar el gráfico
            ChartPanel chartPanel = new ChartPanel(lineaDibujo);
            chartPanel.setPreferredSize(new java.awt.Dimension(600, 400)); // Tamaño recomendado

            return chartPanel;
        }

        JOptionPane.showMessageDialog(this, "Debe seleccionar un Libro y un perfil.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return null;

    }

    private void mostrarGraficoDeLineas() {
        // Obtener el ChartPanel con el gráfico
        ChartPanel nuevoGraficoPanel = crearSimpleLineChart();

        // 1. Limpiar el jPanelLienzo de cualquier componente anterior
        jPanelLienzo.removeAll();

        // 2. Establecer un Layout Manager adecuado para jPanelLienzo
        // El código generado por el editor utiliza GroupLayout para jPanelLienzo.
        // Para que el ChartPanel se expanda, es mejor establecer BorderLayout.
        jPanelLienzo.setLayout(new BorderLayout());

        // 3. Añadir el nuevo ChartPanel al jPanelLienzo
        jPanelLienzo.add(nuevoGraficoPanel, BorderLayout.CENTER);

        // 4. Pedir a Swing que revalide y repinte el panel para que los cambios se muestren
        jPanelLienzo.revalidate();
        jPanelLienzo.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelPrincipal;
    private javax.swing.JComboBox<String> cbMeses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelLienzo;
    private javax.swing.JLabel lblPerfil;
    // End of variables declaration//GEN-END:variables
}
